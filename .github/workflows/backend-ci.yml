name: Backend CI

on:
  pull_request:
    branches: ["main"]
    paths:
      [
        "docker-compose.yml",
        "backend/**",
        "shared/**",
        "nginx/**",
        "data/**",
        "migrations/**",
        ".github/workflows/*.yml",
      ]

jobs:
  Tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      TEST_DATABASE_URL: postgres://test_user:test_pass@localhost:5432/test_db

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install nightly Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt

      - name: Lint
        run: cargo clippy & cargo fmt

      - name: Prepare SQLx Offline Data
        run: |
          cargo install sqlx-cli --no-default-features --features postgres
          cargo sqlx migrate run --source migrations/postgres
          cargo sqlx prepare --workspace -- --bin backend --features postgres --no-default-features
        env:
          DATABASE_URL: ${{ env.TEST_DATABASE_URL }}

      - name: Run tests
        run: cargo test --no-default-features --features postgres
        env:
          DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
