services:
  nginx:
    image: nginx:latest
    container_name: gateway
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/webidler.gregoirenaisse.be/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/webidler.gregoirenaisse.be/privkey.pem:/etc/nginx/ssl/privkey.pem
      - /var/www/certbot:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - backend_net

  backend:
    image: backend:latest
    container_name: backend
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    volumes:
      - ./data:/data
    restart: always
    healthcheck:
      test: curl --fail http://backend:4200 || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      TURNSTILE_SECRET: ${TURNSTILE_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      AES_KEY: ${AES_KEY}
      HASH_KEY: ${HASH_KEY}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      DATABASE_URL: postgres://webidler_user:${POSTGRES_PASSWORD}@database/webidler
      CORS_FRONTEND_URL: https://gregouar.github.io
      RUST_LOG: DEBUG
    networks:
      - backend_net

  database:
    image: postgres:15
    container_name: database
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: webidler
      POSTGRES_USER: webidler_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend_net

volumes:
  pgdata:

networks:
  backend_net:
